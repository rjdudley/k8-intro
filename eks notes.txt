Kubernetes in AWS
* totally self-managed on EC2
* partially to fully AWS managed on EKS

(open eks.drawio in VS Code with Henning Dieterichs' Draw.Io Integration extension)

EKS
* fully managed control plane

* Deployment in 
	- AWS cloud, fully managed
	- Outposts, partially on-prem partially managed
	- EKS Anywhere, on-prem self-managed
	- EKS Distro, on-prem or wherever, self-managed
	- https://docs.aws.amazon.com/eks/latest/userguide/eks-deployment-options.html
	
* Compute
	- AWS Fargate, fully managed
	- Karpenter, self-managed
	- Managed EC2 node groups, fully managed
	- EC2, self managed
	
* manage with
	- kubectl
	- eksctl
	- AWS CLI
	- AWS CDK
	- AWS Console
	- Terraform, Pulumi
	
* Setup is not linear, there are side quests
	- IAM role, copy-paste from docs, has its own side quest
		- trust policy, copy-paste from docs
	- private subnet
		- default is public
		- you have to remove the option for traffic from 0.0.0.0
	- the setup user matters, there is a little reconfiguration if you want to add another
		- https://repost.aws/knowledge-center/eks-api-server-unauthorized-error
		- not the usual IAM setup, done on the command line
	

Multiple config reference: https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/

change between local (minikuke) and AWS context
kubectl config use-context {context name}

View the config file in %userprofile%\.kube folder, or use 
kubectl config view

Edit the config file for friendlier names, the AWS default name is the entire ARN

Will need a second deployment file for cloud, since cloud uses a LoadBalancer service, and local uses NodePort
Note that all we configured was LoadBalancer, EKS creates an ELB and related security groups

EKS references
- https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html
- https://www.jetbrains.com/dotnet/guide/tutorials/dotnet-days-online-2021/containerize-net-apps-and-deploy-to-kubernetes/
- https://runeet.hashnode.dev/deploy-aspnet-core-apps-to-amazon-elastic-kubernetes-service-eks

Cloud has many new challenges than dev machine or on-prem
- different components
- components you may not have needed local/on-prem
- very different configuration
- 

First try stuck in Pending
kubectl get pod

kubectl describe pod contactsapi-pod
reported taints

"Warning  FailedScheduling  13s (x2 over 5m16s)  default-scheduler  0/2 nodes are available: 2 node(s) had untolerated taint {eks.amazonaws.com/compute-type: fargate}. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.."

EKS adds two tolerations by default, we need to figure out which of these two is the issue

node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
node.kubernetes.io/unreachable:NoExecute op=Exists for 300s


Troubleshooting

- needed a NAT: https://stackoverflow.com/questions/59649086/pod-stuck-in-pending-state-when-trying-to-schedule-it-on-aws-fargate
- needed subnet tags: https://victoryeo-62924.medium.com/external-ip-pending-problem-in-aws-eks-7f2df180da54
- debugging: https://repost.aws/knowledge-center/eks-pod-status-troubleshooting
- you may need to create a NAT: https://repost.aws/knowledge-center/ecs-fargate-tasks-private-subnet

created public NAT per https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-creating
deleted and redeployed pods





